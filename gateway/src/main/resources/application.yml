spring.application.name: insurance-gateway

server:
  port: 80

#数据库连接池配置
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/insurance_dev?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
    username: root
    password: root
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 10
      max-active: 2000
      min-idle: 10
      time-between-eviction-runs-millis: 1800000
      min-evictable-idle-time-millis: 1800000
      validation-query: SELECT 1
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
#  main:
#    web-application-type: reactive
#    allow-bean-definition-overriding: true
  #整合Redis  选择JRedis
  redis:
    database: 0   #数据库索引
    host: 82.156.133.176  #Redis服务器地址(腾讯云服务器地址)
    port: 6379  #Redis服务器端口
    password: '446212798' #Redis服务器密码 默认为空
    jedis:
      pool:
        max-active: 1024  #连接池最大连接数（负值表示没有限制）
        max-wait: 10000  #连接池最大阻塞等待时间（负值表示没有限制）
        max-idle: 200  #连接池最大空闲连接
        min-idle: 0  #连接池最小空闲连接
    timeout: 10000  #连接超时时间
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true #开启从注册中心动态创建路由的功能，利用微服务名进行路由
      globalcors:
        corsConfigurations:
          '[/**]': # 这里的'/**'表示对所有路由生效，可以根据需要调整为特定路径
            allowedOrigins: "*" # 允许所有的源地址，也可以指定具体的域名
            allowedMethods: # 允许的 HTTP 方法类型
              - "GET"
              - "POST"
              - "PUT"
              - "DELETE"
              - "OPTIONS"
#            allowedHeaders: "*" # 允许所有的请求头，也可以指定具体的请求头
#            allowCredentials: true # 是否允许携带凭证（cookies）
            maxAge: 3600 # CORS预检请求的有效期（秒）
      routes:
        - id: edor    #路由的ID，没有固定规则但要求唯一，建议配合服务名
#          uri: http://localhost:8080          #匹配后提供服务的路由地址
          uri: lb://insurance-edor #匹配后提供服务的路由地址
          predicates:
            - Path=/api-edor/**         # 断言，路径相匹配的进行路由
          order: 1
          filters:
#            - AddRequestHeader=from, gateway
            - StripPrefix=1
            - RewritePath=/api-edor/?(?<segment>.*), /$\{segment}
        - id: insure     #路由的ID，没有固定规则但要求唯一，建议配合服务名
#          uri: http://localhost:8081          #匹配后提供服务的路由地址
          uri: lb://insurance-insure     #匹配后提供服务的路由地址
          predicates:
            - Path=/api-insure/**         # 断言，路径相匹配的进行路由 (不同的id断言路径不可以一样)
          order: 2
          filters:
#            - AddRequestHeader=from, gateway
            - StripPrefix=1
            - RewritePath=/api-insure/?(?<segment>.*), /$\{segment}
            # - After=2020-11-20T17:07:24.352+08:00[Asia/Shanghai]
            #            - Cookie=username,longy
            # - Before=2020-11-20T17:11:24.352+08:00[Asia/Shanghai]
            # - Between
            # - Host=**.foo.org
            # - Path=/headers
            # - Method=GET
            # - Header=X-Request-Id, \d+
            # - Query=foo, ba.
            # - Query=baz
            # - Cookie=chocolate, ch.p

#mybatis文件访问路径
mybatis:
  mapper-locations: classpath:mapper/*.xml

#swagger控制开关
swagger2:
    enable: true

#配置日志级别
logging:
  level:
    cn.com.gateway: debug
